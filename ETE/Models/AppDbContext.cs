// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ETE.Models;

public partial class AppDbContext : DbContext
{
    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Codes> Codes { get; set; }

    public virtual DbSet<DeadTimes> DeadTimes { get; set; }

    public virtual DbSet<Hours> Hours { get; set; }

    public virtual DbSet<Lines> Lines { get; set; }

    public virtual DbSet<Machine> Machine { get; set; }

    public virtual DbSet<MasterEngineering> MasterEngineering { get; set; }

    public virtual DbSet<PartNumberMatrix> PartNumberMatrix { get; set; }

    public virtual DbSet<Process> Process { get; set; }

    public virtual DbSet<Production> Production { get; set; }

    public virtual DbSet<Reason> Reason { get; set; }

    public virtual DbSet<WorkShift> WorkShift { get; set; }

    public virtual DbSet<WorkShiftHours> WorkShiftHours { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Codes>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Codes__3214EC07B37B3481");

            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        modelBuilder.Entity<DeadTimes>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DeadTime__3214EC0716A17786");

            entity.Property(e => e.CodeId).HasColumnName("codeId");
            entity.Property(e => e.Minutes).HasColumnName("minutes");
            entity.Property(e => e.ReasonId).HasColumnName("reasonId");
            entity.Property(e => e.RegistrationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("registrationDate");

            entity.HasOne(d => d.Code).WithMany(p => p.DeadTimes)
                .HasForeignKey(d => d.CodeId)
                .HasConstraintName("FK__DeadTimes__codeI__09A971A2");

            entity.HasOne(d => d.Reason).WithMany(p => p.DeadTimes)
                .HasForeignKey(d => d.ReasonId)
                .HasConstraintName("FK__DeadTimes__reaso__0A9D95DB");
        });

        modelBuilder.Entity<Hours>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Hours__3214EC0761B7BA8B");

            entity.Property(e => e.Date)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Time)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("time");
        });

        modelBuilder.Entity<Lines>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Lines__3214EC079D07FF1E");

            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        modelBuilder.Entity<Machine>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Machine__3214EC07CD36A79B");

            entity.Property(e => e.Name)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("name");
            entity.Property(e => e.ProcessId).HasColumnName("processId");

            entity.HasOne(d => d.Process).WithMany(p => p.Machine)
                .HasForeignKey(d => d.ProcessId)
                .HasConstraintName("FK__Machine__process__6383C8BA");
        });

        modelBuilder.Entity<MasterEngineering>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MasterEn__3214EC07B6459782");

            entity.Property(e => e.ChildPartNumber)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("childPartNumber");
            entity.Property(e => e.Client)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("client");
            entity.Property(e => e.Concatenated)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("concatenated");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.ExternalDiameter)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("externalDiameter");
            entity.Property(e => e.Family)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("family");
            entity.Property(e => e.Line).HasColumnName("line");
            entity.Property(e => e.Oper).HasColumnName("oper");
            entity.Property(e => e.OperSetup).HasColumnName("operSetup");
            entity.Property(e => e.Operation)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("operation");
            entity.Property(e => e.ParentPartNumber)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("parentPartNumber");
            entity.Property(e => e.Process)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("process");
            entity.Property(e => e.ProcessComments)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("processComments");
            entity.Property(e => e.PurchasePart)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("purchasePart");
            entity.Property(e => e.PzHr).HasColumnName("pzHr");
            entity.Property(e => e.Sequence).HasColumnName("sequence");
            entity.Property(e => e.Type)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("type");
            entity.Property(e => e.Verification)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("verification");
        });

        modelBuilder.Entity<PartNumberMatrix>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PartNumb__3214EC07350FF55C");

            entity.Property(e => e.PartNumber)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Process>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Process__3214EC076619DC23");

            entity.Property(e => e.LineId).HasColumnName("lineId");
            entity.Property(e => e.Name)
                .HasMaxLength(70)
                .IsUnicode(false)
                .HasColumnName("name");

            entity.HasOne(d => d.Line).WithMany(p => p.Process)
                .HasForeignKey(d => d.LineId)
                .HasConstraintName("FK__Process__lineId__60A75C0F");
        });

        modelBuilder.Entity<Production>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Producti__3214EC0780B14DA4");

            entity.Property(e => e.DeadTimesId).HasColumnName("deadTimesId");
            entity.Property(e => e.HourId).HasColumnName("hourId");
            entity.Property(e => e.LinesId).HasColumnName("linesId");
            entity.Property(e => e.MachineId).HasColumnName("machineId");
            entity.Property(e => e.ManualDate)
                .HasColumnType("datetime")
                .HasColumnName("manualDate");
            entity.Property(e => e.MasterEnginnerId).HasColumnName("masterEnginnerId");
            entity.Property(e => e.PartNumber)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("partNumber");
            entity.Property(e => e.PieceQuantity).HasColumnName("pieceQuantity");
            entity.Property(e => e.ProcessId).HasColumnName("processId");
            entity.Property(e => e.RegistrationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("registrationDate");
            entity.Property(e => e.Scrap).HasColumnName("scrap");

            entity.HasOne(d => d.DeadTimes).WithMany(p => p.Production)
                .HasForeignKey(d => d.DeadTimesId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Productio__deadT__22751F6C");

            entity.HasOne(d => d.Hour).WithMany(p => p.Production)
                .HasForeignKey(d => d.HourId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Productio__hourI__1F98B2C1");

            entity.HasOne(d => d.Lines).WithMany(p => p.Production)
                .HasForeignKey(d => d.LinesId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Productio__lines__208CD6FA");

            entity.HasOne(d => d.MasterEnginner).WithMany(p => p.Production)
                .HasForeignKey(d => d.MasterEnginnerId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Productio__maste__236943A5");

            entity.HasOne(d => d.Process).WithMany(p => p.Production)
                .HasForeignKey(d => d.ProcessId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Productio__proce__2180FB33");
        });

        modelBuilder.Entity<Reason>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Reason__3214EC07B9961FDE");

            entity.Property(e => e.CodeId).HasColumnName("codeId");
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("name");

            entity.HasOne(d => d.Code).WithMany(p => p.Reason)
                .HasForeignKey(d => d.CodeId)
                .HasConstraintName("FK__Reason__codeId__06CD04F7");
        });

        modelBuilder.Entity<WorkShift>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WorkShif__3214EC0792AC041D");

            entity.Property(e => e.Name)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        modelBuilder.Entity<WorkShiftHours>(entity =>
        {
            entity.HasKey(e => new { e.WorkShiftId, e.HourId }).HasName("PK__WorkShif__A8B003DC7A0C06EA");

            entity.HasOne(d => d.Hour).WithMany(p => p.WorkShiftHours)
                .HasForeignKey(d => d.HourId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__WorkShift__HourI__6EF57B66");

            entity.HasOne(d => d.WorkShift).WithMany(p => p.WorkShiftHours)
                .HasForeignKey(d => d.WorkShiftId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__WorkShift__WorkS__6E01572D");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}